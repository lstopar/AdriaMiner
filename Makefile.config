#
# Global configuration for QMiner makefiles
#

UNAME := $(shell uname)
ARCH := $(shell arch)

ifeq ($(UNAME), Linux)
  # Linux flags
  CC = g++
  CXXFLAGS += -std=c++0x -Wall -Wno-deprecated-declarations
  #CXXFLAGS += -O3
  # turn on for crash debugging, get symbols with <prog> 2>&1 | c++filt
  CXXFLAGS += -g -rdynamic
  LDFLAGS += -fopenmp
  LIBS += -lrt -luuid

else ifeq ($(UNAME), Darwin)
  # OS X flags
  CC = g++
  CXXFLAGS += -std=c++0x -Wall -Wno-deprecated-declarations
  CXXFLAGS += -O3
  LDFLAGS += -fopenmp
  LIBS += -lrt -luuid

else ifeq ($(shell uname -o), Cygwin)
  # Cygwin flags
  CC = g++
  CXXFLAGS += -std=c++0x -Wall -Wno-deprecated-declarations
  CXXFLAGS += -O3
  LDFLAGS += -fopenmp
  LIBS += -lrt -luuid

endif

# architecture
ifeq ($(ARCH), x86_64)
	# libs for x64
	LIBV8 = ../QMiner/lib/v8/out/x64.release/obj.target/tools/gyp
	LIBV8_STATIC_LIBS = $(LIBV8)/libv8_base.x64.a $(LIBV8)/libv8_snapshot.a
else ifeq ($(ARCH), armv6l)
	# libs for ARM
	LIBV8 = ../QMiner/lib/v8/out/arm.release/obj.target/tools/gyp
	LIBV8_STATIC_LIBS = $(LIBV8)/libv8_base.arm.a $(LIBV8)/libv8_snapshot.a
endif